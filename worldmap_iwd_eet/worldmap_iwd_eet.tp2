BACKUP ~worldmap_iwd_eet/backup~
AUTHOR ~ya~

ALWAYS
//BLOCK ADD_MAP_ICONS
// extracts all icons in file path_to_icons with a cycle number equal to or greater than icon_index
// and appends them, in order, to the map icon .bam file associated with the specified worldmap, 
DEFINE_ACTION_FUNCTION ~ADD_MAP_ICONS~
	INT_VAR
	icon_index = 0 // sequence (cycle) number of your first icon in your .bam, indexed from 0
	STR_VAR
	path_to_icons = ~~ // full path to the .bam file containing your icons, e.g. ~mymod/bam/mapicons.bam~
	patch_to_pvrz = ~~ // directory patch to .pvrz files associated with your merging .bam icon, e.g. ~mymod/pvrz~
	worldmap = ~worldmap~ // which .wmp file should these icons be associated with, e.g. ~worldm25~
	RET
	icons_added // how many icons were successfully added. if this is 0, you have a problem
	new_icon_index // sequence number of your first icon in the new .bam - use this when you patch the worldmap
BEGIN
	ACTION_IF (NOT FILE_EXISTS ~%path_to_icons%~) BEGIN
		FAIL ~ADD_MAP_ICONS: could not find specified icon file (%path_to_icons%)~
	END ELSE ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%worldmap%.wmp~) BEGIN
		FAIL ~ADD_MAP_ICONS: could not find worldmap (%worldmap%.wmp) in your game~
	END
	OUTER_SET icons_added = 0
	OUTER_SET new_icon_index = 0
	OUTER_SET cycles_to_add = 0
	OUTER_SET frames_to_add = 0
	OUTER_SET blocks_to_add = 0
	// find which .bam contains icons for this worldmap
	OUTER_TEXT_SPRINT mapicons ~~
	COPY_EXISTING ~%worldmap%.wmp~ ~override~
		PATCH_IF (SOURCE_SIZE > 0xf) BEGIN
			READ_LONG 0xc worldmap_off
			PATCH_IF (SOURCE_SIZE > (worldmap_off + 0x37)) BEGIN
				READ_ASCII (worldmap_off + 0x30) mapicons
			END
		END
	BUT_ONLY
	ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%mapicons%.bam~) BEGIN
		FAIL ~ADD_MAP_ICONS: could not find map icon file (%mapicons%.bam) in your game~
	END
	// read data from %mapicons%.bam
	COPY_EXISTING ~%mapicons%.bam~ ~override~
		READ_ASCII 0x0 sig (4)
		READ_ASCII 0x4 version (4)
		PATCH_IF (NOT (~%sig%~ STRING_EQUAL_CASE ~BAM ~ OR ~%version%~ STRING_EQUAL_CASE ~v2 ~)) BEGIN
			PATCH_FAIL ~ADD_MAP_ICONS: map icon file (%mapicons%.bam) is not a BAM v2 file~
		END
	BUT_ONLY
	// read data from our map icon .bam
	COPY - ~%path_to_icons%~ ~%path_to_icons%~
		READ_ASCII 0x0 sig (4)
		READ_ASCII 0x4 version (4)
		PATCH_IF (NOT (~%sig%~ STRING_EQUAL_CASE ~BAM ~ OR ~%version%~ STRING_EQUAL_CASE ~v2 ~)) BEGIN
			PATCH_FAIL ~ADD_MAP_ICONS: specified icon file (%path_to_icons%) is not a BAM v2 file~
		END
		READ_LONG 0x8 num_frames //Count of frame entries
		READ_LONG 0xc num_cycles //Count of cycle entries
		READ_LONG 0x10 num_blocks //Count of data blocks
		READ_LONG 0x14 frames_off //Offset (from start of file) to frame entries
		READ_LONG 0x18 cycles_off //Offset (from start of file) to cycle entries
		READ_LONG 0x1c blocks_off //Offset (from start of file) to data blocks
		SET cycles_to_add = num_cycles - icon_index
		PATCH_IF (cycles_to_add < 1 OR cycles_to_add > num_cycles) BEGIN
			SET cycles_to_add = 0
			SET max_cycle = num_cycles - 1
			PATCH_FAIL ~ADD_MAP_ICONS: icon_index specified (%icon_index%) is outside of range 0 to %max_cycle% cycles in %path_to_icons%~
		END
		// read our cycle, frame, block data
		//Cycle Entries (0x4)
		//PATCH_PRINT ~cycles_to_add = %cycles_to_add%~
		FOR (i = 0; i < cycles_to_add; i += 1) BEGIN // for each new icon
			READ_SHORT (cycles_off + 0x4*(icon_index + i) + 0x0) frames_in_cycle //Count of frame entries in this cycle
			READ_SHORT (cycles_off + 0x4*(icon_index + i) + 0x2) start_cycle //Start index of frame entries in this cycle
			//PATCH_PRINT ~ Cycle %i%: frames_in_cycle = %frames_in_cycle%; start_cycle = %start_cycle%~
			DEFINE_ASSOCIATIVE_ARRAY cycles_tbl BEGIN ~%i%~ , ~%frames_in_cycle%~ => ~%start_cycle%~ END
			//Frame Entries (0xc)
			FOR (j = 0; j < frames_in_cycle; j += 1) BEGIN
				SET frame = start_cycle + j
				READ_SHORT (frames_off + 0xc*frame + 0x0) frame_width //Frame width
				READ_SHORT (frames_off + 0xc*frame + 0x2) frame_height //Frame height
				READ_SHORT (frames_off + 0xc*frame + 0x4) frame_x //Frame center X coordinate
				READ_SHORT (frames_off + 0xc*frame + 0x6) frame_y //Frame center Y coordinate
				READ_SHORT (frames_off + 0xc*frame + 0x8) start_block //Start index of data blocks
				READ_SHORT (frames_off + 0xc*frame + 0xa) blocks_in_frame //Count of data blocks
				//PATCH_PRINT ~  Frame %frame% (%j%): frame_width = %frame_width%; frame_height = %frame_height%; frame_x = %frame_x%; frame_y = %frame_y%; start_block = %start_block%; blocks_in_frame = %blocks_in_frame%~
				DEFINE_ASSOCIATIVE_ARRAY frames_tbl BEGIN ~%frame%~ , ~%frame_width%~ , ~%frame_height%~ , ~%frame_x%~ , ~%frame_y%~ , ~%start_block%~ => ~%blocks_in_frame%~ END
				//Data Block (0x1c)
				FOR (k = 0; k < blocks_in_frame; k += 1) BEGIN
					SET block = start_block + k
					READ_LONG (blocks_off + 0x1c*block + 0x0) block_page //PVRZ page (Refers to MOSxxxx.PVRZ files, where xxxx is a zero-padded four-digits decimal number.)
					READ_LONG (blocks_off + 0x1c*block + 0x4) block_srcX //Source x coordinate
					READ_LONG (blocks_off + 0x1c*block + 0x8) block_srcY //Source y coordinate
					READ_LONG (blocks_off + 0x1c*block + 0xc) block_width //Width
					READ_LONG (blocks_off + 0x1c*block + 0x10) block_height //Height
					READ_LONG (blocks_off + 0x1c*block + 0x14) block_trgX //Target x coordinate
					READ_LONG (blocks_off + 0x1c*block + 0x18) block_trgY //Target y coordinate
					//PATCH_PRINT ~   Block %block% (%k%): block_page = %block_page%; block_srcX = %block_srcX%; block_srcY = %block_srcY%; block_width = %block_width%; block_height = %block_height%; block_trgX = %block_trgX%; block_trgY = %block_trgY%~
					DEFINE_ASSOCIATIVE_ARRAY blocks_tbl BEGIN ~%block%~ , ~%block_srcX%~ , ~%block_srcY%~ , ~%block_width%~ , ~%block_height%~ , ~%block_trgX%~ , ~%block_trgY%~ => ~%block_page%~ END
				END
			END
		END
	ACTION_PHP_EACH cycles_tbl AS data => start_cycle BEGIN
		//PRINT ~cycles_tbl: cycle = %data%; frames_in_cycle = %data_1%; start_cycle = %start_cycle%~
	END
	ACTION_PHP_EACH frames_tbl AS data => blocks_in_frame BEGIN
		OUTER_SET frames_to_add = frames_to_add + 1
		//PRINT ~frames_tbl: frame = %data%; frame_width = %data_1%; frame_height = %data_2%; frame_x = %data_3%; frame_y = %data_4%; start_block = %data_5%; blocks_in_frame = %blocks_in_frame%~
	END
	ACTION_PHP_EACH blocks_tbl AS data => block_page BEGIN
		OUTER_SET blocks_to_add = blocks_to_add + 1
		//PRINT ~blocks_tbl: block = %data%; block_srcX = %data_1%; block_srcY = %data_2%; block_width = %data_3%; block_height = %data_4%; block_trgX = %data_5%; block_trgY = %data_6%; block_page = %block_page%~
	END
	ACTION_IF (cycles_to_add >= 1) BEGIN // only continue if a valid initial icon index was provided
		// add new icons to .bam
		COPY_EXISTING ~%mapicons%.bam~ ~override~
			READ_LONG 0x8 num_frames //Count of frame entries
			READ_LONG 0xc num_cycles //Count of cycle entries
			READ_LONG 0x10 num_blocks //Count of data blocks
			READ_LONG 0x14 frames_off //Offset (from start of file) to frame entries
			READ_LONG 0x18 cycles_off //Offset (from start of file) to cycle entries
			READ_LONG 0x1c blocks_off //Offset (from start of file) to data blocks
			// how many bytes we are adding to the file
			SET new_frame_bytes = 0xc*frames_to_add
			SET new_cycle_bytes = 0x4*cycles_to_add
			SET new_block_bytes = 0x1c*blocks_to_add
			SET old_frames_off = frames_off
			SET old_cycles_off = cycles_off
			SET old_blocks_off = blocks_off
			//PATCH_PRINT ~frames_off = %frames_off%; cycles_off = %cycles_off%; blocks_off = %blocks_off%; new_frame_bytes = %new_frame_bytes%; new_cycle_bytes = %new_cycle_bytes%; new_block_bytes = %new_block_bytes%~
			// add new frame bytes
			INSERT_BYTES (frames_off + 0xc*num_frames) new_frame_bytes
			PATCH_IF (old_cycles_off > old_frames_off) BEGIN
				SET cycles_off = cycles_off + new_frame_bytes
			END
			PATCH_IF (old_blocks_off > old_frames_off) BEGIN
				SET blocks_off = blocks_off + new_frame_bytes
			END
			// add new cycle bytes
			INSERT_BYTES (cycles_off + 0x4*num_cycles) new_cycle_bytes
			PATCH_IF (old_blocks_off > old_cycles_off) BEGIN
				SET blocks_off = blocks_off + new_cycle_bytes
			END
			PATCH_IF (old_frames_off > old_cycles_off) BEGIN
				SET frames_off = frames_off + new_cycle_bytes
			END
			// add new block bytes
			INSERT_BYTES (blocks_off + 0x1c*num_blocks) new_block_bytes
			PATCH_IF (old_frames_off > old_blocks_off) BEGIN
				SET frames_off = frames_off + new_block_bytes
			END
			PATCH_IF (old_cycles_off > old_blocks_off) BEGIN
				SET cycles_off = cycles_off + new_block_bytes
			END
			// write cycle data
			i = 0
			PHP_EACH cycles_tbl AS data => start_cycle BEGIN
				WRITE_SHORT (cycles_off + 0x4*(num_cycles + i) + 0x0) ~%data_1%~ //Count of frame entries in this cycle
				READ_SHORT (cycles_off + 0x4*(num_cycles + i - 1) + 0x2) old_start_cycle
				SET new_start_cycle = old_start_cycle + ~%data_1%~
				WRITE_SHORT (cycles_off + 0x4*(num_cycles + i) + 0x2) new_start_cycle //Start index of frame entries in this cycle
				i = i + 1
			END
			// write frame data
			i = 0
			PHP_EACH frames_tbl AS data => blocks_in_frame BEGIN
				WRITE_SHORT (frames_off + 0xc*(num_frames + i) + 0x0) ~%data_1%~ //Frame width
				WRITE_SHORT (frames_off + 0xc*(num_frames + i) + 0x2) ~%data_2%~ //Frame height
				WRITE_SHORT (frames_off + 0xc*(num_frames + i) + 0x4) ~%data_3%~ //Frame center X coordinate
				WRITE_SHORT (frames_off + 0xc*(num_frames + i) + 0x6) ~%data_4%~ //Frame center Y coordinate
				READ_SHORT (frames_off + 0xc*(num_frames + i - 1) + 0x8) old_start_block
				READ_SHORT (frames_off + 0xc*(num_frames + i - 1) + 0xa) old_blocks_in_frame
				SET new_start_block = old_start_block + old_blocks_in_frame
				WRITE_SHORT (frames_off + 0xc*(num_frames + i) + 0x8) new_start_block //Start index of data blocks
				WRITE_SHORT (frames_off + 0xc*(num_frames + i) + 0xa) blocks_in_frame //Count of data blocks
				i = i + 1
			END
			// write block data
			LPF ~FIND_FREE_PVRZ_INDEX~ RET free_index END
			SET free_index_cnt = 0
			i = 0
			PHP_EACH blocks_tbl AS data => block_page BEGIN
				PATCH_IF (VARIABLE_IS_SET $remapped_pvrz(~%block_page%~)) BEGIN
					TEXT_SPRINT new_block_page $remapped_pvrz(~%block_page%~)
				END ELSE BEGIN
					SET new_block_page = free_index + free_index_cnt
					DEFINE_ASSOCIATIVE_ARRAY remapped_pvrz BEGIN ~%block_page%~ => ~%new_block_page%~ END
					SET free_index_cnt = free_index_cnt + 1
				END
				WRITE_LONG (blocks_off + 0x1c*(num_blocks + i) + 0x0) new_block_page //PVRZ page (Refers to MOSxxxx.PVRZ files, where xxxx is a zero-padded four-digits decimal number.)
				WRITE_LONG (blocks_off + 0x1c*(num_blocks + i) + 0x4) ~%data_1%~ //Source x coordinate
				WRITE_LONG (blocks_off + 0x1c*(num_blocks + i) + 0x8) ~%data_2%~ //Source y coordinate
				WRITE_LONG (blocks_off + 0x1c*(num_blocks + i) + 0xc) ~%data_3%~ //Width
				WRITE_LONG (blocks_off + 0x1c*(num_blocks + i) + 0x10) ~%data_4%~ //Height
				WRITE_LONG (blocks_off + 0x1c*(num_blocks + i) + 0x14) ~%data_5%~ //Target x coordinate
				WRITE_LONG (blocks_off + 0x1c*(num_blocks + i) + 0x18) ~%data_6%~ //Target y coordinate
				i = i + 1
			END
            // set return values
            SET new_icon_index = num_cycles // first new index equals old number of cycles
            SET icons_added = cycles_to_add // we added all icons successfully
			// update header values
			SET num_frames += frames_to_add
			SET num_cycles += cycles_to_add
			SET num_blocks += blocks_to_add
			WRITE_LONG 0x8 num_frames
			WRITE_LONG 0xc num_cycles
			WRITE_LONG 0x10 num_blocks
			WRITE_LONG 0x14 frames_off
			WRITE_LONG 0x18 cycles_off
			WRITE_LONG 0x1c blocks_off
		BUT_ONLY
	END
	ACTION_PHP_EACH remapped_pvrz AS block_page => new_block_page BEGIN
		ACTION_FOR_EACH index IN block_page new_block_page BEGIN
			OUTER_SET value = EVAL ~%index%~
			ACTION_IF (value < 10) BEGIN
				OUTER_SPRINT EVAL ~%index%~ ~000%value%~
			END ELSE ACTION_IF (value < 100) BEGIN
				OUTER_SPRINT EVAL ~%index%~ ~00%value%~
			END ELSE ACTION_IF (value < 1000) BEGIN
				OUTER_SPRINT EVAL ~%index%~ ~0%value%~
			END ELSE BEGIN
				OUTER_SPRINT EVAL ~%index%~ ~%value%~
			END
		END
		COPY_LARGE ~%patch_to_pvrz%/mos%block_page%.pvrz~ ~override/mos%new_block_page%.pvrz~
	END
END
//BLOCKEND
//BLOCK ADD_WORLDMAP_TBL
DEFINE_ACTION_FUNCTION ~ADD_WORLDMAP_TBL~
	INT_VAR
	inclSv = 0            // to 1 if you want to patch saved game worldmaps as well as the master worldmap. NB: changes to saved games are uninstallable
	verbose = 0           // to 1 to enable debug messages
	add_x = 0             // add this value to area's X (east-west) coordinate specified in TBL file (BP-BGT Worldmap areas file is excluded)
	add_y = 0             // add this value to area's Y (north-south) coordinate specified in TBL file (BP-BGT Worldmap areas file is excluded)
	STR_VAR
	path_to_areas = ~~    // full path to the text file containing your areas data, e.g. ~mymod/tbl/areas.tbl~
	path_to_areas_bp = ~~ // as above but this points to file used by BP-BGT Worldmap - this way if some save is detected to have BP-BGT Worldmap wmp stored it will use different coordinates / values
	path_to_links = ~~    // full path to the text file containing your links data, e.g. ~mymod/tbl/links.tbl~
	path_to_trans = ~~    // full path to the text file containing your translation data, e.g. ~mymod/language/%LANGUAGE%/worldmap.tra~
	worldmap = ~worldmap~ // which .wmp file should be patched, e.g. ~worldm25~
	RET
	areas_added           // how many areas were successfully added. if this is 0, you have a problem
	links_added           // how many links were successfully added. if this is 0, you have a problem
	//areNum_array          // array containing worldmap entry number for each added area (name => areNum), e.g. number evaluation code: TEXT_SPRINT areNum $areNum_array(~name~)
	//commented out because of missing WeiDU feature: http://gibberlings3.net/forums/index.php?showtopic=28123
BEGIN
	OUTER_SET areas_added = 0
	OUTER_SET links_added = 0
	ACTION_CLEAR_ARRAY valid_areas
	ACTION_CLEAR_ARRAY valid_areas_bp
	ACTION_CLEAR_ARRAY valid_links
	ACTION_CLEAR_ARRAY trans_array
	ACTION_CLEAR_ARRAY save_dirs
	ACTION_CLEAR_ARRAY areNum_array
	ACTION_IF NOT ~%path_to_areas%~ STR_EQ ~~ BEGIN
		COPY - ~%path_to_areas%~ ~.../%path_to_areas%~
			//PRETTY_PRINT_2DA
			REPLACE_TEXTUALLY ~%WNL%~ ~%LNL%~
			REPLACE_TEXTUALLY ~//.*$~ ~~
			READ_2DA_ENTRIES_NOW areas_2da 10
			FOR (i = 1; i < areas_2da; i = i + 1) BEGIN
				READ_2DA_ENTRY_FORMER areas_2da i 0 "short_name"
				PATCH_IF FILE_EXISTS_IN_GAME ~%short_name%.are~ BEGIN
					DEFINE_ASSOCIATIVE_ARRAY valid_areas BEGIN ~%i%~ => ~%short_name%~ END
				END
			END
	END
	ACTION_IF NOT ~%path_to_areas_bp%~ STR_EQ ~~ BEGIN
		COPY - ~%path_to_areas_bp%~ ~.../%path_to_areas_bp%~
			//PRETTY_PRINT_2DA
			REPLACE_TEXTUALLY ~%WNL%~ ~%LNL%~
			REPLACE_TEXTUALLY ~//.*$~ ~~
			READ_2DA_ENTRIES_NOW areas_2da_bp 10
			FOR (i = 1; i < areas_2da_bp; i = i + 1) BEGIN
				READ_2DA_ENTRY_FORMER areas_2da_bp i 0 "short_name"
				PATCH_IF FILE_EXISTS_IN_GAME ~%short_name%.are~ BEGIN
					DEFINE_ASSOCIATIVE_ARRAY valid_areas_bp BEGIN ~%i%~ => ~%short_name%~ END
				END
			END
	END
	ACTION_IF NOT ~%path_to_links%~ STR_EQ ~~ BEGIN
		COPY - ~%path_to_links%~ ~.../%path_to_links%~
			//PRETTY_PRINT_2DA
			REPLACE_TEXTUALLY ~%WNL%~ ~%LNL%~
			REPLACE_TEXTUALLY ~//.*$~ ~~
			READ_2DA_ENTRIES_NOW links_2da 12
			FOR (i = 1; i < links_2da; i = i + 1) BEGIN
				READ_2DA_ENTRY_FORMER links_2da i 0 "src_area"
				READ_2DA_ENTRY_FORMER links_2da i 2 "target_are"
				PATCH_IF FILE_EXISTS_IN_GAME ~%src_area%.are~ AND FILE_EXISTS_IN_GAME ~%target_are%.are~ BEGIN
					DEFINE_ASSOCIATIVE_ARRAY valid_links BEGIN ~%i%~ => ~%src_area%~ END
				END
			END
	END
	ACTION_IF NOT ~%path_to_trans%~ STR_EQ ~~ BEGIN
		COPY - ~%path_to_trans%~ ~.../%path_to_trans%~
			//PRETTY_PRINT_2DA
			REPLACE_TEXTUALLY ~%WNL%~ ~%LNL%~
			REPLACE_TEXTUALLY ~//.*$~ ~~
			REPLACE_EVALUATE CASE_INSENSITIVE ~~~~~^\([ %TAB%]*\)\(@[^ %TAB%=]+\)\([ %TAB%]*=[ %TAB%]*[~"]\)\([^~"]+\)\([~"]\)~~~~~ BEGIN
				INNER_PATCH_SAVE string "%MATCH4%" BEGIN
					REPLACE_TEXTUALLY "###" " "
				END
				DEFINE_ASSOCIATIVE_ARRAY trans_array BEGIN ~%MATCH2%~ => ~%string%~ END
			END ~%MATCH0%~
	END
	ACTION_IF inclSv = 1 BEGIN
		ACTION_DEFINE_ASSOCIATIVE_ARRAY save_dirs BEGIN ~save~ => ~~ END
		ACTION_DEFINE_ASSOCIATIVE_ARRAY save_dirs BEGIN ~mpsave~ => ~~ END
		ACTION_IF FILE_EXISTS_IN_GAME ~campaign.2da~ BEGIN
			COPY_EXISTING - ~campaign.2da~ ~.../campaign.2da~
				COUNT_2DA_ROWS 32 "cntrow"
				FOR (i = 0; i < "%cntrow%"; i = i + 1) BEGIN
					READ_2DA_ENTRY i 12 32 "save_dir"
					TO_LOWER save_dir
					DEFINE_ASSOCIATIVE_ARRAY save_dirs BEGIN ~%save_dir%~ => ~~ END
				END
		END
	END
	OUTER_SET messages = verbose
	OUTER_SET save_patching = 0
	COPY_EXISTING ~%worldmap%.wmp~ ~override~
		LPM add_worldmap_macro
	BUT_ONLY
	ACTION_IF verbose = 1 BEGIN
		PRINT ~ADD_WORLDMAP_TBL: %areas_added% areas and %links_added% links added to %worldmap%.wmp~
	END
	ACTION_IF inclSv = 1 AND (areas_added > 0 OR links_added > 0) BEGIN
		OUTER_SET messages = 0
		OUTER_SET save_patching = 1
		ACTION_PHP_EACH save_dirs AS save_dir => ~~ BEGIN
			ACTION_IF DIRECTORY_EXISTS ~%USER_DIRECTORY%/%save_dir%~ BEGIN
				ACTION_CLEAR_ARRAY save_array
				GET_DIRECTORY_ARRAY save_array ~%USER_DIRECTORY%/%save_dir%~ ~~
				ACTION_PHP_EACH save_array AS from => to BEGIN
					ACTION_IF FILE_EXISTS ~%to%/%worldmap%.wmp~ BEGIN //old games
						ACTION_IF verbose = 1 BEGIN
							PRINT ~ADD_WORLDMAP_TBL: Patching %to%/%worldmap%.wmp~
						END
						COPY + ~%to%/%worldmap%.wmp~ ~%to%~
							LPM add_worldmap_macro
						BUT_ONLY
					END ELSE ACTION_IF FILE_EXISTS ~%to%/baldur.sav~ BEGIN //ee games
						ACTION_IF verbose = 1 BEGIN
							PRINT ~ADD_WORLDMAP_TBL: Patching %to%/baldur.sav~
						END
						COPY + ~%to%/baldur.sav~ ~%to%~ //no backup
							EDIT_SAV_FILE 1 BEGIN
								PATCH_IF ~%SAV_FILE%~ STR_EQ ~%worldmap%.wmp~ BEGIN
									LPM add_worldmap_macro
								END
							END
						BUT_ONLY
					END
				END
			END
		END
	END
END

DEFINE_PATCH_MACRO add_worldmap_macro BEGIN
	READ_LONG 0xc "wmp_off"
	READ_ASCII (wmp_off + 0x30) "wmp_icons"
	PATCH_IF ~%wmp_icons%~ STR_EQ ~BPBGTMAP~ BEGIN //BP-BGT Worldmap WMP file detected
		SPRINT valid_var ~valid_areas_bp~
		SPRINT areas_var ~areas_2da_bp~
	END ELSE BEGIN
		SPRINT valid_var ~valid_areas~
		SPRINT areas_var ~areas_2da~
	END
	PHP_EACH ~%valid_var%~ AS i => short_name BEGIN
		//READ_2DA_ENTRY_FORMER ~%areas_var%~ i 0 "short_name"
		READ_2DA_ENTRY_FORMER ~%areas_var%~ i 1 "content"
		READ_2DA_ENTRY_FORMER ~%areas_var%~ i 2 "long_name"
		READ_2DA_ENTRY_FORMER ~%areas_var%~ i 3 "flags"
		READ_2DA_ENTRY_FORMER ~%areas_var%~ i 4 "bam_anim"
		READ_2DA_ENTRY_FORMER ~%areas_var%~ i 5 "x_pos"
		PATCH_IF NOT ~%wmp_icons%~ STR_EQ ~BPBGTMAP~ BEGIN
			SET x_pos = x_pos + add_x
		END
		READ_2DA_ENTRY_FORMER ~%areas_var%~ i 6 "y_pos"
		PATCH_IF NOT ~%wmp_icons%~ STR_EQ ~BPBGTMAP~ BEGIN
			SET y_pos = y_pos + add_y
		END
		READ_2DA_ENTRY_FORMER ~%areas_var%~ i 7 "name"
		READ_2DA_ENTRY_FORMER ~%areas_var%~ i 8 "tooltip"
		READ_2DA_ENTRY_FORMER ~%areas_var%~ i 9 "load_im"
		PATCH_IF messages = 1 BEGIN
			PATCH_PRINT ~ADD_WORLDMAP_TBL: Adding area [%short_name% %content% %long_name% %flags% %bam_anim% %x_pos% %y_pos% %name% %tooltip% %load_im%] to %worldmap%.wmp~
		END
		PATCH_FOR_EACH var IN name tooltip BEGIN
			SPRINT match EVAL ~%%var%%~
			PATCH_IF ~%match%~ STR_EQ ~N~ BEGIN
				SPRINT EVAL ~%var%~ ~~
			END ELSE PATCH_IF (VARIABLE_IS_SET $trans_array("%match%")) BEGIN 
				TEXT_SPRINT EVAL ~%var%~ $trans_array(~%match%~)
			END ELSE PATCH_IF ~%path_to_trans%~ STR_EQ ~~ BEGIN
				PATCH_FAIL ~ADD_WORLDMAP_TBL: Can't evaluate %match% string, path_to_trans has not been specified~
			END ELSE BEGIN
				PATCH_FAIL ~ADD_WORLDMAP_TBL: %match% string not found in %path_to_trans%~
			END
		END
		PATCH_IF ~%load_im%~ STR_EQ ~N~ BEGIN
			SPRINT load_im ~~
		END
		// read offsets
		READ_LONG 0x30 "area_num"
		READ_LONG 0x34 "area_off"
		READ_LONG 0x38 "link_off"
		READ_LONG 0x3c "link_num"
		SET found_area = 0 //Look for areas already added
		FOR (j = 0; j < area_num; j = j + 1) BEGIN //Area loop
			READ_ASCII (area_off + 0xf0*j) "area_ref" //Area reference
			PATCH_IF ~%area_ref%~ STR_EQ ~%short_name%~ BEGIN
				// overwrite area data in case there were changes
				WRITE_ASCIIE (area_off + 0xf0*j + 0x0) "%short_name%" // area resref (current)
				WRITE_ASCIIE (area_off + 0xf0*j + 0x8) "%content%" // area resref (original)
				WRITE_ASCIIE (area_off + 0xf0*j + 0x10) "%long_name%" #32 // area script name
				WRITE_LONG (area_off + 0xf0*j + 0x30) flags // flags
				WRITE_LONG (area_off + 0xf0*j + 0x34) bam_anim // map icon
				WRITE_LONG (area_off + 0xf0*j + 0x38) x_pos // x coordinate
				WRITE_LONG (area_off + 0xf0*j + 0x3c) y_pos // y coordinate
				PATCH_IF ~%name%~ STR_EQ ~~ BEGIN
					WRITE_LONG (area_off + 0xf0*j + 0x40) ~-1~
				END ELSE BEGIN
					SAY (area_off + 0xf0*j + 0x40) "%name%" // area name
				END
				PATCH_IF ~%tooltip%~ STR_EQ ~~ BEGIN
					WRITE_LONG (area_off + 0xf0*j + 0x44) ~-1~
				END ELSE BEGIN
					SAY (area_off + 0xf0*j + 0x44) "%tooltip%" // area description
				END
				WRITE_ASCIIE (area_off + 0xf0*j + 0x48) "%load_im%" // loading mos
				PATCH_IF save_patching = 0 BEGIN
					DEFINE_ASSOCIATIVE_ARRAY areNum_array BEGIN ~%short_name%~ => ~%j%~ END
				END
				SET found_area = 1
				SET j = area_num
			END
		END
		PATCH_IF found_area = 0 BEGIN //If the area doesn't exist in the worldmap
			// add the new area; first we update # of areas, and the following link offset
			WRITE_LONG 0x30 (area_num + 1)
			WRITE_LONG 0x38 (link_off + 0xf0)
			// add area to worldmap
			INSERT_BYTES (area_off + 0xf0*area_num + 0x0) 0xf0
			WRITE_ASCIIE (area_off + 0xf0*area_num + 0x0) "%short_name%" // area resref (current)
			WRITE_ASCIIE (area_off + 0xf0*area_num + 0x8) "%content%" // area resref (original)
			WRITE_ASCIIE (area_off + 0xf0*area_num + 0x10) "%long_name%" #32 // area script name
			WRITE_LONG (area_off + 0xf0*area_num + 0x30) flags // flags
			WRITE_LONG (area_off + 0xf0*area_num + 0x34) bam_anim // map icon
			WRITE_LONG (area_off + 0xf0*area_num + 0x38) x_pos // x coordinate
			WRITE_LONG (area_off + 0xf0*area_num + 0x3c) y_pos // y coordinate
			PATCH_IF ~%name%~ STR_EQ ~~ BEGIN
				WRITE_LONG (area_off + 0xf0*area_num + 0x40) ~-1~
			END ELSE BEGIN
				SAY (area_off + 0xf0*area_num + 0x40) "%name%" // area name
			END
			PATCH_IF ~%tooltip%~ STR_EQ ~~ BEGIN
				WRITE_LONG (area_off + 0xf0*area_num + 0x44) ~-1~
			END ELSE BEGIN
				SAY (area_off + 0xf0*area_num + 0x44) "%tooltip%" // area description
			END
			WRITE_ASCIIE (area_off + 0xf0*area_num + 0x48) "%load_im%" // loading mos
			PATCH_IF save_patching = 0 BEGIN
				DEFINE_ASSOCIATIVE_ARRAY areNum_array BEGIN ~%short_name%~ => ~%areNum%~ END
			END
		END
		PATCH_IF save_patching = 0 BEGIN
			SET areas_added = areas_added + 1
		END
	END
	PHP_EACH valid_links AS i => src_area BEGIN
		//READ_2DA_ENTRY_FORMER links_2da i 0 "src_area"
		READ_2DA_ENTRY_FORMER links_2da i 1 "src_nwse"
		READ_2DA_ENTRY_FORMER links_2da i 2 "target_are"
		READ_2DA_ENTRY_FORMER links_2da i 3 "entry_name"
		READ_2DA_ENTRY_FORMER links_2da i 4 "trv_time"
		READ_2DA_ENTRY_FORMER links_2da i 5 "def_entry"
		READ_2DA_ENTRY_FORMER links_2da i 6 "enc1"
		READ_2DA_ENTRY_FORMER links_2da i 7 "enc2"
		READ_2DA_ENTRY_FORMER links_2da i 8 "enc3"
		READ_2DA_ENTRY_FORMER links_2da i 9 "enc4"
		READ_2DA_ENTRY_FORMER links_2da i 10 "enc5"
		READ_2DA_ENTRY_FORMER links_2da i 11 "enc_prob"
		PATCH_IF messages = 1 BEGIN
			PATCH_PRINT ~ADD_WORLDMAP_TBL: Adding link [%src_area% %src_nwse% %target_are% %entry_name% %trv_time% %def_entry% %enc1% %enc2% %enc3% %enc4% %enc5% %enc_prob%] to %worldmap%.wmp~
		END
		PATCH_FOR_EACH var IN entry_name enc1 enc2 enc3 enc4 enc5 BEGIN
			SPRINT match EVAL ~%%var%%~
			PATCH_IF ~%match%~ STR_EQ ~N~ BEGIN
				SPRINT EVAL ~%var%~ ~~
			END
		END
		INNER_PATCH_SAVE entry_name "%entry_name%" BEGIN
			REPLACE_TEXTUALLY ~###~ ~ ~
		END
		LPF ADD_WORLDMAP_LINKS
			INT_VAR
			distance_scale = trv_time
			default_entry = def_entry
			encounter_probability = enc_prob
			STR_VAR
			from_area = EVAL ~%src_area%~
			from_node = EVAL ~%src_nwse%~
			to_area = EVAL ~%target_are%~
			entry = EVAL ~%entry_name%~
			random_area1 = EVAL ~%enc1%~
			random_area2 = EVAL ~%enc2%~
			random_area3 = EVAL ~%enc3%~
			random_area4 = EVAL ~%enc4%~
			random_area5 = EVAL ~%enc5%~
		END
		PATCH_IF save_patching = 0 BEGIN
			SET links_added = links_added + 1
		END
	END
END
//BLOCKEND
END

LANGUAGE ~Russian~ ~worldmap_iwd_eet~ ~worldmap_iwd_eet/ru_RU.tra~
LANGUAGE ~English~ ~worldmap_iwd_eet~ ~worldmap_iwd_eet/en_US.tra~
LANGUAGE ~French~ ~worldmap_iwd_eet~ ~worldmap_iwd_eet/en_US.tra~ ~worldmap_iwd_eet/fr_FR.tra~

BEGIN ~worldmap_iwd_eet~

OUTER_SET inclSaves = 0
PRINT ~Patch existing save games?
  [1] Yes
  [2] No~
ACTION_READLN inclSaves
OUTER_WHILE ( (!IS_AN_INT inclSaves) OR (inclSaves > 2) OR (inclSaves < 1) ) BEGIN
	PRINT ~Patch existing save games?
  [1] Yes
  [2] No~
	ACTION_READLN inclSaves
END

OUTER_SET wmp_xCoord_SoA = 0
OUTER_SET wmp_yCoord_SoA = 0

LAF ADD_MAP_ICONS
  STR_VAR
    path_to_icons = ~worldmap_iwd_eet/icon/icon.bam~
    patch_to_pvrz = ~worldmap_iwd_eet/icon~
  RET
    new_icon_index
END
OUTER_SET ID9700_icon = new_icon_index
LAF ADD_MAP_ICONS
  STR_VAR
    path_to_icons = ~worldmap_iwd_eet/AR5203/icon.bam~
    patch_to_pvrz = ~worldmap_iwd_eet/AR5203~
  RET
    icon_5203 = new_icon_index
END
LAF ADD_MAP_ICONS
  STR_VAR
    path_to_icons = ~worldmap_iwd_eet/AR5303/icon.bam~
    patch_to_pvrz = ~worldmap_iwd_eet/AR5303~
  RET
    icon_5303 = new_icon_index
END
LAF ADD_MAP_ICONS
  STR_VAR
    path_to_icons = ~worldmap_iwd_eet/AR6050/icon.bam~
    patch_to_pvrz = ~worldmap_iwd_eet/AR6050~
  RET
    icon_6050 = new_icon_index
END
LAF ADD_MAP_ICONS
  STR_VAR
    path_to_icons = ~worldmap_iwd_eet/AR6200/icon.bam~
    patch_to_pvrz = ~worldmap_iwd_eet/AR6200~
  RET
    icon_6200 = new_icon_index
END

COPY ~worldmap_iwd_eet/areas.tbl~ ~worldmap_iwd_eet~
	REPLACE_TEXTUALLY ~ZZZ~ ~%ID9700_icon%~ EVALUATE_BUFFER
	REPLACE_TEXTUALLY ~XX1~ ~%icon_5203%~   EVALUATE_BUFFER
	REPLACE_TEXTUALLY ~XX2~ ~%icon_5303%~   EVALUATE_BUFFER
	REPLACE_TEXTUALLY ~XX4~ ~%icon_6050%~   EVALUATE_BUFFER
	REPLACE_TEXTUALLY ~XX5~ ~%icon_6200%~   EVALUATE_BUFFER

<<<<<<<<wmp.l
@iwd11000 = "str11000"
@iwd12000 = "str12000"
@iwd12100 = "str12100"
@iwd13000 = "str13000"
@iwd13600 = "str13600"
@iwd14000 = "str14000"
@iwd15000 = "str15000"
@iwd16000 = "str16000"
@iwd17000 = "str17000"
@iwd18001 = "str18001"
@iwd19100 = "str19100"
@iwd19200 = "str19200"
@iwd19300 = "str19300"
@iwd19500 = "str19500"
@iwd19600 = "str19600"
@iwd19700 = "str19700"
@iwd21000 = "str21000"
@iwd22000 = "str22000"
@iwd23000 = "str23000"
@iwd24000 = "str24000"
@iwd24100 = "str24100"
@iwd25000 = "str25000"
@iwd25001 = "str25001"
@iwd25010 = "str25010"
@iwd25005 = "str25005"
@iwd25200 = "str25200"
@iwd25300 = "str25300"
@iwd26000 = "str26000"
@iwd26001 = "str26001"
@iwd26100 = "str26100"
@iwd26200 = "str26200"
@iwd26300 = "str26300"
>>>>>>>>

OUTER_SPRINT ~rep11000~ @10709
OUTER_SPRINT ~rep12000~ @19731
OUTER_SPRINT ~rep12100~ @3061
OUTER_SPRINT ~rep13000~ @10712
OUTER_SPRINT ~rep13600~ @10921
OUTER_SPRINT ~rep14000~ @19730
OUTER_SPRINT ~rep15000~ @16234
OUTER_SPRINT ~rep16000~ @22854
OUTER_SPRINT ~rep17000~ @15663
OUTER_SPRINT ~rep18001~ @29744
OUTER_SPRINT ~rep19100~ @3069
OUTER_SPRINT ~rep19200~ @10923
OUTER_SPRINT ~rep19300~ @15757
OUTER_SPRINT ~rep19500~ @19729
OUTER_SPRINT ~rep19600~ @10925
OUTER_SPRINT ~rep19700~ @100061
OUTER_SPRINT ~rep21000~ @10457
OUTER_SPRINT ~rep22000~ @10460
OUTER_SPRINT ~rep23000~ @10459
OUTER_SPRINT ~rep24000~ @32032
OUTER_SPRINT ~rep24100~ @32033
OUTER_SPRINT ~rep25000~ @32034
OUTER_SPRINT ~rep25001~ @32038
OUTER_SPRINT ~rep25010~ @41389
OUTER_SPRINT ~rep25005~ @32037
OUTER_SPRINT ~rep25200~ @32113
OUTER_SPRINT ~rep25300~ @32092
OUTER_SPRINT ~rep26000~ @19731
OUTER_SPRINT ~rep26001~ @3061
OUTER_SPRINT ~rep26100~ @19730
OUTER_SPRINT ~rep26200~ @32095
OUTER_SPRINT ~rep26300~ @16234

OUTER_INNER_PATCH_SAVE rep11000 ~%rep11000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep12000 ~%rep12000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep12100 ~%rep12100%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep13000 ~%rep13000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep13600 ~%rep13600%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep14000 ~%rep14000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep15000 ~%rep15000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep16000 ~%rep16000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep17000 ~%rep17000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep18001 ~%rep18001%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep19100 ~%rep19100%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep19200 ~%rep19200%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep19300 ~%rep19300%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep19500 ~%rep19500%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep19600 ~%rep19600%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep19700 ~%rep19700%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep21000 ~%rep21000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep22000 ~%rep22000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep23000 ~%rep23000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep24000 ~%rep24000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep24100 ~%rep24100%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep25000 ~%rep25000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep25001 ~%rep25001%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep25010 ~%rep25010%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep25005 ~%rep25005%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep25200 ~%rep25200%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep25300 ~%rep25300%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep26000 ~%rep26000%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep26001 ~%rep26001%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep26100 ~%rep26100%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep26200 ~%rep26200%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END
OUTER_INNER_PATCH_SAVE rep26300 ~%rep26300%~ BEGIN REPLACE_TEXTUALLY ~ ~ ~###~ END

COPY ~wmp.l~ ~worldmap_iwd_eet/worldmap.tra~
    REPLACE_TEXTUALLY ~str11000~ ~%rep11000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str12000~ ~%rep12000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str12100~ ~%rep12100%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str13000~ ~%rep13000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str13600~ ~%rep13600%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str14000~ ~%rep14000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str15000~ ~%rep15000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str16000~ ~%rep16000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str17000~ ~%rep17000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str18001~ ~%rep18001%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str19100~ ~%rep19100%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str19200~ ~%rep19200%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str19300~ ~%rep19300%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str19500~ ~%rep19500%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str19600~ ~%rep19600%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str19700~ ~%rep19700%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str21000~ ~%rep21000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str22000~ ~%rep22000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str23000~ ~%rep23000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str24000~ ~%rep24000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str24100~ ~%rep24100%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str25000~ ~%rep25000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str25001~ ~%rep25001%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str25010~ ~%rep25010%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str25005~ ~%rep25005%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str25200~ ~%rep25200%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str25300~ ~%rep25300%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str26000~ ~%rep26000%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str26001~ ~%rep26001%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str26100~ ~%rep26100%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str26200~ ~%rep26200%~ EVALUATE_BUFFER
    REPLACE_TEXTUALLY ~str26300~ ~%rep26300%~ EVALUATE_BUFFER

LAF ADD_WORLDMAP_TBL
	INT_VAR
    	inclSv = inclSaves
    	add_x = wmp_xCoord_SoA
    	add_y = wmp_yCoord_SoA
	STR_VAR
    	path_to_areas    = ~worldmap_iwd_eet/areas.tbl~
    	path_to_areas_bp = ~worldmap_iwd_eet/areas.tbl~
    	path_to_links    = ~worldmap_iwd_eet/links.tbl~
    	path_to_trans    = ~worldmap_iwd_eet/worldmap.tra~
END







